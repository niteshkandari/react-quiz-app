{"version":3,"sources":["Modal.js","App.js","reportWebVitals.js","index.js","App.module.css","modal.module.css"],"names":["ModalWrapper","props","className","classes","backdrop","onClick","onConfirm","overlay","score","Modal","ReactDom","createPortal","handler","document","getElementById","App","useState","qApi","setQapi","questions","setQuestions","currentQ","setCurrentQ","showScore","setShowScore","setScore","error","setError","useEffect","fetch","then","res","json","data","Ui","box","questionSection","length","question","questionText","optionSection","answerOptions","map","ansOpt","i","isCorrect","nextQ","prevState","checkAnsHandler","answerText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"iOAGMA,EAAe,SAAAC,GAEnB,OACE,mCACA,qBAAKC,UAAWC,IAAQC,SAAUC,QAASJ,EAAMK,UAAjD,SACE,qBAAKJ,UAAWC,IAAQI,QAAxB,SACA,gCACC,+CACA,0CAAaN,EAAMO,mBAeXC,EAPD,SAAAR,GACZ,OACE,mCACCS,IAASC,aAAa,cAAC,EAAD,CAAcH,MAAOP,EAAMO,MAAQF,UAAWL,EAAMW,UAAWC,SAASC,eAAe,mBCqDnGC,EAxEH,WAAO,IAAD,EACQC,mBAAS,MADjB,mBACTC,EADS,KACHC,EADG,OAEkBF,mBAAS,MAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGgBJ,mBAAS,GAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIkBN,oBAAS,GAJ3B,mBAITO,EAJS,KAIEC,EAJF,OAKUR,mBAAS,GALnB,mBAKTR,EALS,KAKFiB,EALE,OAMUT,oBAAS,GANnB,mBAMTU,EANS,KAMFC,EANE,KAQhBC,qBAAU,WACRC,MAAM,oDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIf,EAAQe,MACxBb,EAAaH,KACZ,CAACE,EAAWF,IA2Bf,OACE,qCACGS,GAAS,cAAC,EAAD,CAAOd,QALA,WACnBe,GAAS,IAIiCnB,MAAOA,IAC9CW,EACC,qBAAKjB,UAAWC,IAAQ+B,GAAxB,SAEIX,EACG,sBAAKrB,UAAWC,IAAQK,MAAxB,UACC,0CAAaA,KACb,wBAAQH,QAjBG,WACvBmB,GAAa,GACbF,EAAY,GACZG,EAAS,IAcG,2BAGF,mCACE,sBAAKvB,UAAWC,IAAQgC,IAAxB,UACE,sBAAKjC,UAAWC,IAAQiC,gBAAxB,UACE,iCAAOf,EAAW,EAAlB,MAAwBF,EAAUkB,OAAlC,OACA,qBAAKnC,UAAWC,IAAQmC,SAAxB,SAAmCnB,EAAUE,GAAUkB,kBAEzD,qBAAKrC,UAAWC,IAAQqC,cAAxB,SACGrB,EAAUE,GAAUoB,cAAcC,KAAI,SAACC,EAAQC,GAAT,OAAe,mBACpDvC,QAAS,kBA7CL,SAACwC,GACvB,IAAMC,EAAQzB,EAAW,EACrBwB,GACFvB,GAAY,SAACyB,GAAD,OAAeA,EAAY,KACvCtB,GAAS,SAACsB,GAAD,OAAeA,EAAY,KAChCD,IAAU3B,EAAUkB,QACtBb,GAAa,KAIfG,GAAS,GACTL,GAAY,SAACyB,GAAD,OAAeA,EAAY,KACnCD,IAAU3B,EAAUkB,QACtBb,GAAa,IAgCgBwB,CAAgBL,EAAOE,YADc,SAEpDF,EAAOM,YAFqDL,eAQvE,OC1DIM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASC,eAAe,SAM1BoC,K,kBCfAW,EAAOC,QAAU,CAAC,GAAK,gBAAgB,IAAM,iBAAiB,gBAAkB,6BAA6B,cAAgB,2BAA2B,MAAQ,mBAAmB,MAAQ,mBAAmB,MAAQ,qB,kBCAtND,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,0B","file":"static/js/main.ffc914d6.chunk.js","sourcesContent":["import classes from './modal.module.css'\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nconst ModalWrapper = props => {\r\n \r\n  return (\r\n    <>\r\n    <div className={classes.backdrop} onClick={props.onConfirm}>\r\n      <div className={classes.overlay}>\r\n      <div>\r\n       <h1> Wrong Answer</h1> \r\n       <span>score:{props.score}</span>\r\n       </div>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n    {ReactDom.createPortal(<ModalWrapper score={props.score}  onConfirm={props.handler}/>,document.getElementById('error-modal'))}\r\n    </>\r\n  )\r\n}\r\nexport default Modal;","import classes from './App.module.css';\nimport React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nconst App = () => {\n  const [qApi, setQapi] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const [currentQ, setCurrentQ] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://quiz-rest-api-heroku.herokuapp.com/api/q\")\n      .then(res => res.json())\n      .then(data => setQapi(data));\n    setQuestions(qApi);\n  }, [questions, qApi])\n  \n  const checkAnsHandler = (isCorrect) => {\n    const nextQ = currentQ + 1;\n    if (isCorrect) {\n      setCurrentQ((prevState) => prevState + 1);\n      setScore((prevState) => prevState + 1);\n      if (nextQ === questions.length) {\n        setShowScore(true);\n      }\n    }\n    else {\n      setError(true);\n      setCurrentQ((prevState) => prevState + 1);\n      if (nextQ === questions.length) {\n        setShowScore(true);\n      }\n    }\n  }\n  const playagainHandler = () => {\n    setShowScore(false);\n    setCurrentQ(0);\n    setScore(0);\n  }\n  const errorHandler = () => {\n    setError(false);\n  }\n  return (\n    <>\n      {error && <Modal handler={errorHandler} score={score} />}\n      {questions ?\n        <div className={classes.Ui}>\n          {\n            showScore ?\n               <div className={classes.score}>\n                <span>score {score}</span>\n                <button onClick={playagainHandler}>play again</button>\n              </div>\n              :\n              <>\n                <div className={classes.box}>\n                  <div className={classes.questionSection}>\n                    <span>{currentQ + 1} / {questions.length} </span>\n                    <div className={classes.question}>{questions[currentQ].questionText}</div>\n                  </div>\n                  <div className={classes.optionSection}>\n                    {questions[currentQ].answerOptions.map((ansOpt, i) => <p key={i}\n                      onClick={() => checkAnsHandler(ansOpt.isCorrect)}\n                    >{ansOpt.answerText}</p>)}\n                  </div>\n                </div>\n              </>\n          }\n        </div>\n        : ('')}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ui\":\"App_Ui__af7ic\",\"box\":\"App_box__3oo0u\",\"questionSection\":\"App_questionSection__3bH8U\",\"optionSection\":\"App_optionSection___2HzS\",\"score\":\"App_score__26Gnx\",\"wrong\":\"App_wrong__2Wvf4\",\"timer\":\"App_timer__3g-XT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"modal_backdrop__2a3L_\",\"overlay\":\"modal_overlay__3Y3eS\"};"],"sourceRoot":""}